{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "Enact Protocol Schema",
    "description": "Schema for validating Enact tool YAML files",
    "definitions": {
        "jsonSchema": {
            "type": "object",
            "description": "JSON Schema object",
            "properties": {
                "type": {
                    "type": "string",
                    "description": "Type of the schema",
                    "enum": [
                        "object",
                        "array",
                        "string",
                        "number",
                        "integer",
                        "boolean",
                        "null"
                    ]
                },
                "properties": {
                    "type": "object",
                    "description": "Properties for an object schema"
                },
                "required": {
                    "type": "array",
                    "description": "Required property names",
                    "items": {
                        "type": "string"
                    }
                },
                "items": {
                    "description": "Schema for array items",
                    "oneOf": [
                        {
                            "$ref": "#/definitions/jsonSchema"
                        },
                        {
                            "type": "boolean"
                        }
                    ]
                },
                "additionalProperties": {
                    "description": "Schema for additional properties",
                    "oneOf": [
                        {
                            "$ref": "#/definitions/jsonSchema"
                        },
                        {
                            "type": "boolean"
                        }
                    ]
                }
            }
        },
        "jsonSchemaType": {
            "type": "object",
            "description": "JSON Schema type definition",
            "properties": {
                "type": {
                    "type": "string",
                    "description": "Type of the value",
                    "enum": [
                        "string",
                        "number",
                        "integer",
                        "boolean",
                        "array",
                        "object",
                        "null"
                    ]
                },
                "description": {
                    "type": "string",
                    "description": "Description of the value"
                },
                "enum": {
                    "type": "array",
                    "description": "Enumeration of possible values"
                },
                "default": {
                    "description": "Default value"
                },
                "format": {
                    "type": "string",
                    "description": "Format of the value"
                },
                "pattern": {
                    "type": "string",
                    "description": "Regex pattern for string validation"
                },
                "minimum": {
                    "type": "number",
                    "description": "Minimum value for numeric types"
                },
                "maximum": {
                    "type": "number",
                    "description": "Maximum value for numeric types"
                },
                "source": {
                    "type": "string",
                    "description": "Source or instructions for obtaining the value"
                }
            }
        },
        "annotationType": {
            "type": "object",
            "description": "MCP-aligned annotations for tool behavior",
            "properties": {
                "title": {
                    "type": "string",
                    "description": "Human-friendly display name for the tool"
                },
                "readOnlyHint": {
                    "type": "boolean",
                    "description": "Indicates if the tool only reads data without side effects"
                },
                "destructiveHint": {
                    "type": "boolean",
                    "description": "Indicates if the tool might make irreversible changes"
                },
                "idempotentHint": {
                    "type": "boolean",
                    "description": "Indicates if calling the tool multiple times with the same input has the same effect as calling it once"
                },
                "openWorldHint": {
                    "type": "boolean",
                    "description": "Indicates if the tool interacts with a dynamic external environment"
                }
            }
        }
    },
    "type": "object",
    "required": [
        "enact",
        "name",
        "description",
        "type",
        "source",
        "inputSchema"
    ],
    "properties": {
        "enact": {
            "type": "string",
            "description": "Enact Protocol version",
            "pattern": "^\\d+\\.\\d+\\.\\d+$"
        },
        "name": {
            "type": "string",
            "description": "Unique identifier for the tool"
        },
        "description": {
            "type": "string",
            "description": "Human-readable description of the tool"
        },
        "version": {
            "type": "string",
            "description": "Semantic version of the tool itself",
            "pattern": "^\\d+\\.\\d+\\.\\d+$"
        },
        "type": {
            "type": "string",
            "description": "Execution type that defines how the tool is executed",
            "enum": [
                "npx",
                "mcp",
                "docker",
                "wasm",
                "http"
            ]
        },
        "source": {
            "type": "string",
            "description": "Identifier for the tool's executable code or endpoint"
        },
        "commit": {
            "type": "string",
            "description": "Specific commit hash for version pinning"
        },
        "inputSchema": {
            "$ref": "#/definitions/jsonSchema",
            "description": "Input parameters for the tool (JSON Schema)"
        },
        "outputSchema": {
            "$ref": "#/definitions/jsonSchema",
            "description": "Output parameters for the tool (JSON Schema)"
        },
        "run": {
            "type": "object",
            "description": "Execution configuration",
            "properties": {
                "args": {
                    "type": "array",
                    "description": "Command arguments for NPX or Docker execution types",
                    "items": {
                        "type": "string"
                    }
                },
                "tool": {
                    "type": "string",
                    "description": "Target tool name for MCP execution type"
                },
                "method": {
                    "type": "string",
                    "description": "HTTP method for HTTP execution type",
                    "enum": [
                        "GET",
                        "POST",
                        "PUT",
                        "DELETE",
                        "PATCH"
                    ]
                },
                "urlTemplate": {
                    "type": "string",
                    "description": "URL template for HTTP execution type"
                },
                "headers": {
                    "type": "object",
                    "description": "HTTP headers for HTTP execution type"
                },
                "bodyTemplate": {
                    "type": "object",
                    "description": "Request body template for HTTP execution type"
                },
                "timeout": {
                    "type": "number",
                    "description": "Maximum execution time in milliseconds"
                }
            },
            "oneOf": [
                {
                    "required": [
                        "args"
                    ]
                },
                {
                    "required": [
                        "tool"
                    ]
                },
                {
                    "required": [
                        "method",
                        "urlTemplate"
                    ]
                }
            ]
        },
        "signature": {
            "type": "object",
            "description": "Cryptographic signature to verify authenticity and integrity",
            "required": [
                "value",
                "signer"
            ],
            "properties": {
                "value": {
                    "type": "string",
                    "description": "Cryptographic signature of the canonical tool definition"
                },
                "signer": {
                    "type": "string",
                    "description": "Identifier of the key or entity that signed the tool"
                }
            }
        },
        "annotations": {
            "$ref": "#/definitions/annotationType",
            "description": "MCP-aligned annotations providing hints to AI agents"
        }
    },
    "patternProperties": {
        "^x-": {
            "description": "Extensions to the Enact Protocol. The field name MUST begin with 'x-'."
        }
    }
}